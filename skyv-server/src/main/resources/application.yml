spring:
  application:
    name: skyeye-monitoring
  
  # 数据源配置
  datasource:
    url: jdbc:postgresql://localhost:5432/skyeye
    username: skyeye_app
    password: skyeye_app_2024
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  # JPA配置
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    open-in-view: false
  
  # Redis配置
  data:
    redis:
      host: localhost
      port: 6379
      password: skyeye_redis_2024
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-wait: -1ms
          max-idle: 10
          min-idle: 5
  
  # 缓存配置
  cache:
    type: redis
    redis:
      time-to-live: 3600000
      use-key-prefix: true
      key-prefix: "skyeye:"
  
  # Jackson配置
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    serialization:
      write-dates-as-timestamps: false
      write-null-map-values: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
      accept-empty-string-as-null-object: true
  
  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  
  # WebSocket配置
  websocket:
    allowed-origins: "*"

# 服务器配置
server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  tomcat:
    uri-encoding: UTF-8
    max-threads: 200
    min-spare-threads: 10

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# 日志配置
logging:
  level:
    com.skyeye: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/skyeye.log
    max-size: 100MB
    max-history: 30

# SkyEye自定义配置
skyeye:
  # JWT配置
  jwt:
    secret: skyeye-jwt-secret-key-2024-monitoring-system
    expiration: 86400000  # 24小时
    refresh-expiration: 604800000  # 7天
  
  # 文件存储配置
  file:
    upload-path: /data/skyeye/uploads
    max-size: 100MB
  
  # 任务调度配置
  scheduler:
    pool-size: 10
    thread-name-prefix: "SkyEye-Task-"
  
  # 数据采集配置
  collector:
    thread-pool-size: 20
    timeout: 30000
    retry-times: 3
  
  # WebSocket配置
  websocket:
    heartbeat-interval: 30000
    max-sessions: 1000

---
# 开发环境配置
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/skyeye_dev
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  data:
    redis:
      database: 1

logging:
  level:
    root: INFO
    com.skyeye: DEBUG

---
# 测试环境配置
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
  h2:
    console:
      enabled: true

---
# 生产环境配置
spring:
  config:
    activate:
      on-profile: prod
  jpa:
    show-sql: false
  data:
    redis:
      database: 0

logging:
  level:
    root: WARN
    com.skyeye: INFO
  file:
    name: /var/log/skyeye/skyeye.log 